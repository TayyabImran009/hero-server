# Generated by Django 2.2.24 on 2022-10-01 18:15

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', jsonfield.fields.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AthleteProfileCategory',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(default='', max_length=300)),
            ],
            options={
                'verbose_name': 'Athlete Profile Categories',
                'verbose_name_plural': ' Athlete Profile Categories',
            },
        ),
        migrations.CreateModel(
            name='BlackListVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(blank=True, max_length=400, null=True)),
                ('channel_id', models.CharField(blank=True, max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=40)),
                ('order_of_display', models.IntegerField(default=0)),
                ('is_random', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Lane',
                'verbose_name_plural': 'Lanes',
            },
        ),
        migrations.CreateModel(
            name='CommunityProfileCategory',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(default='', max_length=300)),
            ],
            options={
                'verbose_name': 'community Profile Categories',
                'verbose_name_plural': 'community Profile Categories',
            },
        ),
        migrations.CreateModel(
            name='HeroSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_title', models.CharField(default='', max_length=300)),
                ('video_description', models.CharField(default='', max_length=600)),
                ('video_id', models.CharField(default='', max_length=20)),
                ('channel_title', models.CharField(default='', max_length=100)),
                ('upload_date', models.CharField(default='', max_length=100)),
                ('channel_id', models.CharField(default='', max_length=100)),
                ('background_image_url', models.URLField(default='')),
            ],
            options={
                'verbose_name': 'Hero Corousel',
                'verbose_name_plural': 'Hero Corousels',
            },
        ),
        migrations.CreateModel(
            name='RandomVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_title', models.CharField(max_length=300)),
                ('video_description', models.CharField(max_length=600)),
                ('video_id', models.CharField(max_length=20)),
                ('channel_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Channel Title (Optional) ')),
                ('upload_date', models.CharField(blank=True, max_length=100, null=True, verbose_name='Uploaded Date (Optional) ')),
                ('channel_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Channel ID (Optional) ')),
                ('video_thumbnail_pic_url', models.URLField(blank=True, default='', null=True)),
                ('video_thumbnail_pic_local', models.ImageField(blank=True, null=True, upload_to='upload_images/', verbose_name='Thumbnail Image')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='youtube_app.Category')),
            ],
            options={
                'verbose_name': 'Managed Video',
                'verbose_name_plural': 'Managed Videos',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(blank=True, max_length=50, null=True)),
                ('channel_id', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='upload_images/', verbose_name='Image')),
                ('data', jsonfield.fields.JSONField(blank=True, null=True)),
                ('most_recent', models.BooleanField(default=True)),
                ('disable', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='youtube_app.Category')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000)),
                ('avatar_image', models.ImageField(blank=True, null=True, upload_to='upload_images/', verbose_name='Avatar')),
                ('banner_image', models.ImageField(default='upload_images/default.png', upload_to='upload_images/', verbose_name='Banner Image')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('experience', models.CharField(blank=True, max_length=400, null=True)),
                ('bio', models.CharField(max_length=500)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='youtube_app.Keyword')),
                ('profile_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='youtube_app.CommunityProfileCategory')),
            ],
            options={
                'verbose_name': 'Community Profiles',
                'verbose_name_plural': 'Community Profiles',
            },
        ),
        migrations.CreateModel(
            name='AthleteProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000)),
                ('avatar_image', models.ImageField(default='upload_images/default.png', upload_to='upload_images/', verbose_name='Avatar')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='upload_images/', verbose_name='Banner Image')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('experience', models.CharField(blank=True, max_length=400, null=True)),
                ('bio', models.CharField(max_length=500)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='youtube_app.Keyword')),
                ('profile_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='youtube_app.AthleteProfileCategory')),
            ],
            options={
                'verbose_name': 'Athlete Profiles',
                'verbose_name_plural': 'Athlete Profiles',
            },
        ),
    ]
